!function(e){var t={};function n(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(o,s,function(t){return e[t]}.bind(null,s));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);n(1);const o=n(2),s=n(3);$(()=>{const e=$(".hanoi"),t=new o;new s(t,e)})},function(e,t,n){},function(e,t){e.exports=class{constructor(){this.towers=[[3,2,1],[],[]]}isValidMove(e,t){const n=this.towers[e],o=this.towers[t];if(0===n.length)return!1;if(0==o.length)return!0;return n[n.length-1]<o[o.length-1]}isWon(){return 3==this.towers[2].length||3==this.towers[1].length}move(e,t){return!!this.isValidMove(e,t)&&(this.towers[t].push(this.towers[e].pop()),!0)}print(){console.log(JSON.stringify(this.towers))}promptMove(e,t){this.print(),e.question("Enter a starting tower: ",n=>{const o=parseInt(n);e.question("Enter an ending tower: ",e=>{const n=parseInt(e);t(o,n)})})}run(e,t){this.promptMove(e,(n,o)=>{this.move(n,o)||console.log("Invalid move!"),this.isWon()?(this.print(),console.log("You win!"),t()):this.run(e,t)})}}},function(e,t){e.exports=class{constructor(e,t){this.game=e,this.$domEle=t,this.selected=null,this.setupTowers()}setupTowers(){this.render()}render(){this.$domEle.empty(),this.game.towers.forEach((e,t)=>{const n=$("<ul>");if(e.forEach(e=>{const t=$("<li>");t.toggleClass("disc-"+e),n.prepend(t)}),n.on("click",()=>{console.log("selected: "+this.selected),null!==this.selected?(console.log(`moved ${this.selected} to ${t}`),this.game.move(this.selected,t),this.selected=null,n.toggleClass("selected"),this.render()):(this.selected=t,n.toggleClass("selected"))}),this.$domEle.append(n),this.game.isWon()){$("#message").text("You Win!")}})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,